import{i,r as p,o as r,c as u,b as n,d as s,e,l,P as d,T as k,w as t,f as h,_ as b}from"./app-92e2b39d.js";import{T as m}from"./ToggleRTLButton-43c02fd8.js";const v=n("h2",{id:"print-button",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#print-button","aria-hidden":"true"},"#"),s(" Print Button")],-1),f=n("p",null,"The theme fully optimize style for print, and there will be a print button at toc in desktop mode by default.",-1),y=n("p",null,[s("To hide print button, you should set "),n("code",null,"print: false"),s(" in theme options.")],-1),g=n("h2",{id:"fullscreen-button",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fullscreen-button","aria-hidden":"true"},"#"),s(" Fullscreen Button")],-1),_=n("p",null,[s("If you need it, you can enable it by setting "),n("code",null,"fullscreen: true"),s(" in theme options.")],-1),T=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"Tips"),n("p",null,"If the current browser does not support full screen, the full screen button is automatically hidden.")],-1),w=n("div",{class:"language-typescript","data-ext":"ts"},[n("pre",{ts:"",class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// .vuepress/config.ts"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" defineUserConfig "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"vuepress"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" hopeTheme "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"vuepress-theme-hope"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"defineUserConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  theme`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"hopeTheme"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
    fullscreen`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")])],-1),x=n("div",{class:"language-javascript","data-ext":"js"},[n("pre",{js:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// .vuepress/config.js"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" defineUserConfig "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"vuepress"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" hopeTheme "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"vuepress-theme-hope"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"defineUserConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"theme"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"hopeTheme"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"fullscreen"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")])],-1),B=h(`<h2 id="back-to-top-button" tabindex="-1"><a class="header-anchor" href="#back-to-top-button" aria-hidden="true">#</a> Back to top button</h2><p><code>vuepress-theme-hope</code> adds a back-to-top button with progress bar which will display after scrolling down 100px by default.</p><p>You can set <code>backToTop: false</code> in theme options to disable it, or set it with an object to customize its threshold distance and progress bar display:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">BackToTopOptions</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * Scroll threshold distance to display back to top button (in pixels)
   *
   * <span class="token keyword">@default</span> 100
   */</span>
  threshold<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Whether display scroll progress
   *
   * <span class="token keyword">@default</span> true
   */</span>
  progress<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rtl-layout" tabindex="-1"><a class="header-anchor" href="#rtl-layout" aria-hidden="true">#</a> RTL Layout</h2><p><code>vuepress-theme-hope</code> fully supports RTL layout. Just set <code>rtl: true</code> in rtl locales.</p>`,6),C=i({__name:"others.html",setup(S){return(j,A)=>{const c=p("CodeTabs");return r(),u("div",null,[v,n("p",null,[s("Try it: "),e(l(d))]),f,y,g,e(l(k)),_,T,e(c,{id:"25",data:[{id:"TS"},{id:"JS"}],"tab-id":"language"},{title0:t(({value:a,isActive:o})=>[s("TS")]),title1:t(({value:a,isActive:o})=>[s("JS")]),tab0:t(({value:a,isActive:o})=>[w]),tab1:t(({value:a,isActive:o})=>[x]),_:1}),B,n("p",null,[s("Try it: "),e(l(m))])])}}}),U=b(C,[["__file","others.html.vue"]]);export{U as default};
