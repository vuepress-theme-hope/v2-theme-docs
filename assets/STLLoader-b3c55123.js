import{Loader as I,FileLoader as P,BufferGeometry as E,Color as _,BufferAttribute as D,Vector3 as k,Float32BufferAttribute as G}from"./three.module-b96b6124.js";class O extends I{constructor(p){super(p)}load(p,R,T,y){const S=this,h=new P(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(this.withCredentials),h.load(p,function(v){try{R(S.parse(v))}catch(A){y?y(A):console.error(A),S.manager.itemError(p)}},T,y)}parse(p){function R(e){const t=new DataView(e),n=32/8*3+32/8*3*3+16/8,s=t.getUint32(80,!0);if(80+32/8+s*n===t.byteLength)return!0;const a=[115,111,108,105,100];for(let i=0;i<5;i++)if(T(a,t,i))return!1;return!0}function T(e,t,n){for(let s=0,l=e.length;s<l;s++)if(e[s]!==t.getUint8(n+s))return!1;return!0}function y(e){const t=new DataView(e),n=t.getUint32(80,!0);let s,l,a,i=!1,x,C,U,u,o;for(let r=0;r<80-10;r++)t.getUint32(r,!1)==1129270351&&t.getUint8(r+4)==82&&t.getUint8(r+5)==61&&(i=!0,x=new Float32Array(n*3*3),C=t.getUint8(r+6)/255,U=t.getUint8(r+7)/255,u=t.getUint8(r+8)/255,o=t.getUint8(r+9)/255);const b=84,L=12*4+2,c=new E,w=new Float32Array(n*3*3),m=new Float32Array(n*3*3),F=new _;for(let r=0;r<n;r++){const d=b+r*L,B=t.getFloat32(d,!0),H=t.getFloat32(d+4,!0),z=t.getFloat32(d+8,!0);if(i){const f=t.getUint16(d+48,!0);f&32768?(s=C,l=U,a=u):(s=(f&31)/31,l=(f>>5&31)/31,a=(f>>10&31)/31)}for(let f=1;f<=3;f++){const V=d+f*12,g=r*3*3+(f-1)*3;w[g]=t.getFloat32(V,!0),w[g+1]=t.getFloat32(V+4,!0),w[g+2]=t.getFloat32(V+8,!0),m[g]=B,m[g+1]=H,m[g+2]=z,i&&(F.set(s,l,a).convertSRGBToLinear(),x[g]=F.r,x[g+1]=F.g,x[g+2]=F.b)}}return c.setAttribute("position",new D(w,3)),c.setAttribute("normal",new D(m,3)),i&&(c.setAttribute("color",new D(x,3)),c.hasColors=!0,c.alpha=o),c}function S(e){const t=new E,n=/solid([\s\S]*?)endsolid/g,s=/facet([\s\S]*?)endfacet/g;let l=0;const a=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,i=new RegExp("vertex"+a+a+a,"g"),x=new RegExp("normal"+a+a+a,"g"),C=[],U=[],u=new k;let o,b=0,L=0,c=0;for(;(o=n.exec(e))!==null;){L=c;const w=o[0];for(;(o=s.exec(w))!==null;){let r=0,d=0;const B=o[0];for(;(o=x.exec(B))!==null;)u.x=parseFloat(o[1]),u.y=parseFloat(o[2]),u.z=parseFloat(o[3]),d++;for(;(o=i.exec(B))!==null;)C.push(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3])),U.push(u.x,u.y,u.z),r++,c++;d!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+l),r!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+l),l++}const m=L,F=c-L;t.addGroup(m,F,b),b++}return t.setAttribute("position",new G(C,3)),t.setAttribute("normal",new G(U,3)),t}function h(e){return typeof e!="string"?new TextDecoder().decode(e):e}function v(e){if(typeof e=="string"){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n)&255;return t.buffer||t}else return e}const A=v(p);return R(A)?y(A):S(h(p))}}export{O as STLLoader};
